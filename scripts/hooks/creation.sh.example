#!/bin/bash
# Example worktree creation hook script for ccmgr-ultra
# This script is executed after a new worktree is successfully created

set -e

echo "Bootstrapping worktree: $CCMGR_WORKTREE_PATH"
echo "Branch: $CCMGR_WORKTREE_BRANCH"
echo "Project: $CCMGR_PROJECT_NAME"

# Navigate to the new worktree
cd "$CCMGR_WORKTREE_PATH"

# Copy configuration files from parent directory
if [ -n "$CCMGR_PARENT_PATH" ]; then
    echo "Copying configuration files from parent: $CCMGR_PARENT_PATH"
    
    # Copy environment files
    for file in .env .env.local .env.development .secrets; do
        if [ -f "$CCMGR_PARENT_PATH/$file" ]; then
            cp "$CCMGR_PARENT_PATH/$file" .
            echo "Copied $file"
        fi
    done
    
    # Copy IDE configuration
    for dir in .vscode .idea; do
        if [ -d "$CCMGR_PARENT_PATH/$dir" ]; then
            cp -r "$CCMGR_PARENT_PATH/$dir" .
            echo "Copied $dir directory"
        fi
    done
fi

# Language-specific setup
echo "Setting up development environment..."

# Node.js projects
if [ -f "package.json" ]; then
    echo "Installing npm dependencies..."
    if command -v npm &> /dev/null; then
        npm install
    elif command -v yarn &> /dev/null; then
        yarn install
    elif command -v pnpm &> /dev/null; then
        pnpm install
    fi
fi

# Python projects
if [ -f "requirements.txt" ] || [ -f "pyproject.toml" ] || [ -f "Pipfile" ]; then
    echo "Setting up Python environment..."
    
    if [ -f "pyproject.toml" ] && command -v poetry &> /dev/null; then
        poetry install
    elif [ -f "Pipfile" ] && command -v pipenv &> /dev/null; then
        pipenv install
    elif [ -f "requirements.txt" ]; then
        if command -v uv &> /dev/null; then
            uv venv
            uv pip install -r requirements.txt
        else
            python -m venv .venv
            .venv/bin/pip install -r requirements.txt
        fi
    fi
fi

# Go projects
if [ -f "go.mod" ]; then
    echo "Downloading Go modules..."
    go mod download
    go mod tidy
fi

# Rust projects
if [ -f "Cargo.toml" ]; then
    echo "Building Rust project..."
    cargo build
fi

# Docker services
if [ -f "docker-compose.yml" ] || [ -f "docker-compose.yaml" ]; then
    echo "Starting Docker services..."
    docker-compose up -d
fi

# Database setup
if [ -f "migrations" ] || [ -d "migrations" ]; then
    echo "Running database migrations..."
    # Add your migration commands here
    # Example: npm run migrate or python manage.py migrate
fi

# Custom project initialization
if [ -f "scripts/init.sh" ]; then
    echo "Running custom initialization script..."
    bash scripts/init.sh
fi

# Create a marker file to indicate bootstrap completion
echo "$(date -Iseconds)" > .ccmgr-bootstrap-completed

echo "Bootstrap complete for $CCMGR_WORKTREE_BRANCH!"
echo "Worktree ready at: $CCMGR_WORKTREE_PATH"